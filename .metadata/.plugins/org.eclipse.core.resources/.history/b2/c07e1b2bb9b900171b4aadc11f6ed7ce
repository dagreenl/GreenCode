package primary;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class setupFiles {
	static setupFiles mySetupFiles;
	final private static String  PACKAGE_NAME = "package temporaryClassHolder;";
	final private static String  TEMPORARY_CLASS_PATH = "src/temporaryClassHolder/";
	

	public static setupFiles getInstance() {
		if( mySetupFiles == null) {
			mySetupFiles = new setupFiles();
		}

		return mySetupFiles;
	}

	private ArrayList<String> readInList;
	private File myFile;

	private setupFiles() {

	}

	public void fileReadIn(String fileLocation) {

		System.out.println(fileLocation);


		myFile = new File(fileLocation);

		Scanner scanner = null;
		try {
			scanner = new Scanner(myFile);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		while(scanner.hasNextLine()) {
			String incomingLine = scanner.nextLine();
			readInList.add(incomingLine);
		}


	}

	public void saveFile(String desiredFileName) {
		System.out.println("saveFile: "+desiredFileName);

		PrintWriter writer = null;
		try {

			writer = new PrintWriter(TEMPORARY_CLASS_PATH+desiredFileName);

		} catch (FileNotFoundException e) {
			System.err.println(e.getMessage());
			e.printStackTrace();
		}

		writer.println(PACKAGE_NAME+"\n");

		for(String fileLine : readInList) {
			writer.println(fileLine);
		}

		readInList = new ArrayList<String>();

		writer.close();
	

	}
	
	public static void addURL(URL u) throws IOException {

		  URLClassLoader sysloader = (URLClassLoader) ClassLoader.getSystemClassLoader();
		  Class sysclass = URLClassLoader.class;

		  try {
		     Method method = sysclass.getDeclaredMethod("addURL", parameters);
		     method.setAccessible(true);
		     method.invoke(sysloader, new Object[]{u});
		  } catch (Throwable t) {
		     t.printStackTrace();
		     throw new IOException("Error, could not add URL to system classloader");
		  }//end try catch

		   }//end method
	
	
	
	
	




}
