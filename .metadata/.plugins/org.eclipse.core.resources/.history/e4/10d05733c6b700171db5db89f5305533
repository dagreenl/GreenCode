package primary;

import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.WatchKey;
import java.nio.file.WatchService;
import java.util.UUID;
import static java.nio.file.StandardWatchEventKinds.ENTRY_CREATE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_DELETE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY;

import temporaryClassHolder.TemporaryPackageHandler;

public class Launch {
	static ImportCode myImportCode = ImportCode.getInstance();
	static TemporaryPackageHandler myTempPackHandler = TemporaryPackageHandler.getInstance();
	static DynamicClassCreation myClassCreator = DynamicClassCreation.getInstance();
	private static WatchKey key;
	Path watchedDirectory = Paths.get("/");




	public static void main(String[] args) {

		UUID newlyGennedUUID = UUID.randomUUID();
		myImportCode.fileReadIn( "incoming_test.txt");
		String newFileName = newlyGennedUUID.toString() + ".java";
		myTempPackHandler.saveFile(newFileName, myImportCode.getReadInList());
		
		
		try {
			WatchService watcher = FileSystems.getDefault().newWatchService();
			Path dir = Paths.get("");
			dir.register(watcher, ENTRY_CREATE, ENTRY_DELETE, ENTRY_MODIFY);
			System.out.println("Watch Service registered for dir: " + dir.getFileName());
		}catch(IOException ex) {
			System.err.println(ex);
		}
		
		
		//myClassCreator.createClass(newFileName);

		/*
		 * Needs to happen after watcher fires.
		 */



	}


}
