package primary;

import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.WatchKey;
import java.nio.file.WatchService;
import java.util.UUID;
import static java.nio.file.StandardWatchEventKinds.ENTRY_CREATE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_DELETE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY;

import temporaryClassHolder.TemporaryPackageHandler;

public class Launch {
	static ImportCode myImportCode = ImportCode.getInstance();
	static TemporaryPackageHandler myTempPackHandler = TemporaryPackageHandler.getInstance();
	static DynamicClassCreation myClassCreator = DynamicClassCreation.getInstance();
	private static WatchKey key;
	Path watchedDirectory = Paths.get("/");
	
	
	
	
    public static void main(String[] args) throws InterruptedException {
    	WatchService watcher = null;
    	
    	try {
			watcher = FileSystems.getDefault().newWatchService();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
    	Path dir = Paths.get("Path/To/Watched/Directory");
    	try {
			dir.register(watcher, ENTRY_CREATE, ENTRY_DELETE, ENTRY_MODIFY);
			key = watcher.take();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
    	
    	
    	UUID newlyGennedUUID = UUID.randomUUID();
    	myImportCode.fileReadIn( "incoming_test.txt");
    	String newFileName = newlyGennedUUID.toString() + ".java";
    	myTempPackHandler.saveFile(newFileName, myImportCode.getReadInList());

    	
    	
    	
    	
    	myClassCreator.createClass(newFileName);
    	
    	/*
    	 * Needs to happen after watcher fires.
    	 */
	
	    
    	
    }
    
    
}
