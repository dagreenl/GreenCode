package primary;

import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.WatchEvent;
import java.nio.file.WatchKey;
import java.nio.file.WatchService;
import java.util.UUID;

import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

import establishedClassHolder.TestThisClass;

import static java.nio.file.StandardWatchEventKinds.ENTRY_CREATE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_DELETE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY;

import temporaryClassHolder.TemporaryPackageHandler;

public class Launch {
	static ImportCode myImportCode = ImportCode.getInstance();
	static TemporaryPackageHandler myTempPackHandler = TemporaryPackageHandler.getInstance();
	static DynamicClassCreation myClassCreator = DynamicClassCreation.getInstance();
	static DirectoryWatch myDirWatch = DirectoryWatch.getInstance();
	private static Thread watcherThread;
	


	public static void main(String[] args) {
		
		watcherThread = new Thread() {
		    public void run() {
		        myDirWatch.startDirWatch("");
		    }  
		};
	
		myImportCode.fileReadIn( "TestThisClass.java");
		
		String newFileName = "TestThisClass.java";
		
		myTempPackHandler.saveFile(newFileName, myImportCode.getReadInList());
		
		//myClassCreator.createClass(newFileName);
		
		Result result = JUnitCore.runClasses(TestThisClass.class);
		
		for (Failure failure : result.getFailures()) {
	         System.out.println(failure.toString());
	      }
		
		System.out.println(result.wasSuccessful());




	}


}
